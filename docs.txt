OrthoC Interpreter Documentation

Version 1.0

Syntax:

1. Comments:
   Comments start with "/pray/" and continue to the end of the line.
   Example: /pray/ This is a comment

2. Prayer Statement:
   Each script should ideally begin with a Prayer statement.
   Syntax: Prayer: [prayer text]
   Example: Prayer: Our Father, who art in heaven...

   Note: If a Prayer statement is not found, the interpreter will output a reminder message.

3. Function Definition:
   Functions are defined using the "invoke" keyword.
   Syntax: invoke FunctionName() { ... }
   Example:
   invoke HolyTrinity() {
       faithful.chant "Father, Son, and Holy Spirit"
   }

4. Print Statement:
   To print text, use the "faithful.chant" command within a function.
   Syntax: faithful.chant("Your message here");
   Example: faithful.chant("Blessed are the meek");

5. Function Call:
   To call a function, use the "call.upon" command.
   Syntax: call.upon FunctionName
   Example: call.upon HolyTrinity

6. Infinite Loop:
   To repeatedly call a function, use the "unceasingly.pray:" command.
   Syntax: unceasingly.pray: FunctionName
   Example: unceasingly.pray: HolyTrinity

   Note: This will create an infinite loop, repeatedly calling the specified function.

Execution Order:
1. The interpreter first processes all function definitions.
2. It then executes all "call.upon" statements in the order they appear in the script.
3. If an "unceasingly.pray:" statement is encountered, it will enter an infinite loop calling the specified function.

Error Handling:
- If a called function is not found, the interpreter will print an error message.
- If no Prayer statement is found, a reminder message will be printed.

Usage:

Run a program:
occ program.oc

Example Script:
Prayer: May the Lord bless this code

invoke Blessing() {
    faithful.chant("May the Lord bless you and keep you");
}

invoke Gratitude() {
    faithful.chant("Thank you, Lord, for this day");
}

call.upon Blessing
call.upon Gratitude

/pray/ Uncomment the line below for an infinite loop of blessings
/pray/ unceasingly.pray: Blessing

Output:
May the Lord bless you and keep you
Thank you, Lord, for this day

Limitations:
- Functions cannot take parameters or return values.
- There are no variables or complex data structures.
- Control structures are limited to the infinite loop provided by "unceasingly.pray:".

Future Enhancements:
- Support for function parameters and return values
- Implementation of conditional statements (if/else)
- Support for variables and basic arithmetic operations
- User input
